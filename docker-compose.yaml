services:

  contractor-db:
    image: 'postgres:latest'
    container_name: 'contractor-db'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=contractor
      - POSTGRES_PASSWORD=contractor
      - POSTGRES_DB=contractor

  deal-db:
    image: 'postgres:latest'
    container_name: 'deal-db'
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=deal
      - POSTGRES_PASSWORD=deal
      - POSTGRES_DB=deal

  auth-db:
    image: 'postgres:latest'
    container_name: 'auth-db'
    ports:
      - '5434:5432'
    environment:
      - POSTGRES_USER=auth
      - POSTGRES_PASSWORD=auth
      - POSTGRES_DB=auth
  auditlog-db:
    image: 'postgres:latest'
    container_name: 'auditlog-db'
    ports:
      - '5435:5432'
    environment:
      - POSTGRES_USER=auditlog
      - POSTGRES_PASSWORD=auditlog
      - POSTGRES_DB=auditlog

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: unless-stopped
    environment:
      TZ: Europe/Moscow
      RABBITMQ_DEFAULT_USER: rab
      RABBITMQ_DEFAULT_PASS: 1234
      RABBITMQ_DEFAULT_VHOST: vhost
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  zookeeper:
    image: confluentinc/cp-zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 29092:29092
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: OUTSIDE://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  kafka-topics-generator:
    image: confluentinc/cp-kafka:6.2.4
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic send-auditlog-event --replication-factor 1 --partitions 2

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "